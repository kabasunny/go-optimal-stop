// proto_definitions\ml_stock_service.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.29.2
// source: ml_stock_service.proto

package experiment_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// リクエストメッセージの定義
type MLStockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbols   []string `protobuf:"bytes,1,rep,name=symbols,proto3" json:"symbols,omitempty"`
	StartDate string   `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   string   `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *MLStockRequest) Reset() {
	*x = MLStockRequest{}
	mi := &file_ml_stock_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MLStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MLStockRequest) ProtoMessage() {}

func (x *MLStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_stock_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MLStockRequest.ProtoReflect.Descriptor instead.
func (*MLStockRequest) Descriptor() ([]byte, []int) {
	return file_ml_stock_service_proto_rawDescGZIP(), []int{0}
}

func (x *MLStockRequest) GetSymbols() []string {
	if x != nil {
		return x.Symbols
	}
	return nil
}

func (x *MLStockRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *MLStockRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

// レスポンスメッセージの定義
type MLStockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SymbolData []*MLSymbolData `protobuf:"bytes,1,rep,name=symbol_data,json=symbolData,proto3" json:"symbol_data,omitempty"` // シンボルごとのデータリスト
}

func (x *MLStockResponse) Reset() {
	*x = MLStockResponse{}
	mi := &file_ml_stock_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MLStockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MLStockResponse) ProtoMessage() {}

func (x *MLStockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_stock_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MLStockResponse.ProtoReflect.Descriptor instead.
func (*MLStockResponse) Descriptor() ([]byte, []int) {
	return file_ml_stock_service_proto_rawDescGZIP(), []int{1}
}

func (x *MLStockResponse) GetSymbolData() []*MLSymbolData {
	if x != nil {
		return x.SymbolData
	}
	return nil
}

// シンボルごとのデータとシグナルを格納するメッセージの定義
type MLSymbolData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol           string                       `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`                                                                                                                                     // シンボル名
	DailyData        []*MLDailyData               `protobuf:"bytes,2,rep,name=daily_data,json=dailyData,proto3" json:"daily_data,omitempty"`                                                                                                              // 日足データリスト
	Signals          []string                     `protobuf:"bytes,3,rep,name=signals,proto3" json:"signals,omitempty"`                                                                                                                                   // 予測結果の日付リスト
	ModelPredictions map[string]*ModelPredictions `protobuf:"bytes,4,rep,name=model_predictions,json=modelPredictions,proto3" json:"model_predictions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 各モデルの予測結果
}

func (x *MLSymbolData) Reset() {
	*x = MLSymbolData{}
	mi := &file_ml_stock_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MLSymbolData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MLSymbolData) ProtoMessage() {}

func (x *MLSymbolData) ProtoReflect() protoreflect.Message {
	mi := &file_ml_stock_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MLSymbolData.ProtoReflect.Descriptor instead.
func (*MLSymbolData) Descriptor() ([]byte, []int) {
	return file_ml_stock_service_proto_rawDescGZIP(), []int{2}
}

func (x *MLSymbolData) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *MLSymbolData) GetDailyData() []*MLDailyData {
	if x != nil {
		return x.DailyData
	}
	return nil
}

func (x *MLSymbolData) GetSignals() []string {
	if x != nil {
		return x.Signals
	}
	return nil
}

func (x *MLSymbolData) GetModelPredictions() map[string]*ModelPredictions {
	if x != nil {
		return x.ModelPredictions
	}
	return nil
}

// 日足データの定義
type MLDailyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date   string  `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Open   float32 `protobuf:"fixed32,2,opt,name=open,proto3" json:"open,omitempty"`
	High   float32 `protobuf:"fixed32,3,opt,name=high,proto3" json:"high,omitempty"`
	Low    float32 `protobuf:"fixed32,4,opt,name=low,proto3" json:"low,omitempty"`
	Close  float32 `protobuf:"fixed32,5,opt,name=close,proto3" json:"close,omitempty"`
	Volume int64   `protobuf:"varint,6,opt,name=volume,proto3" json:"volume,omitempty"`
}

func (x *MLDailyData) Reset() {
	*x = MLDailyData{}
	mi := &file_ml_stock_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MLDailyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MLDailyData) ProtoMessage() {}

func (x *MLDailyData) ProtoReflect() protoreflect.Message {
	mi := &file_ml_stock_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MLDailyData.ProtoReflect.Descriptor instead.
func (*MLDailyData) Descriptor() ([]byte, []int) {
	return file_ml_stock_service_proto_rawDescGZIP(), []int{3}
}

func (x *MLDailyData) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *MLDailyData) GetOpen() float32 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *MLDailyData) GetHigh() float32 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *MLDailyData) GetLow() float32 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *MLDailyData) GetClose() float32 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *MLDailyData) GetVolume() int64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

// 各モデルの予測結果を保持するメッセージの定義
type ModelPredictions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PredictionDates []string `protobuf:"bytes,1,rep,name=prediction_dates,json=predictionDates,proto3" json:"prediction_dates,omitempty"` // 予測結果の日付リスト
}

func (x *ModelPredictions) Reset() {
	*x = ModelPredictions{}
	mi := &file_ml_stock_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModelPredictions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelPredictions) ProtoMessage() {}

func (x *ModelPredictions) ProtoReflect() protoreflect.Message {
	mi := &file_ml_stock_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelPredictions.ProtoReflect.Descriptor instead.
func (*ModelPredictions) Descriptor() ([]byte, []int) {
	return file_ml_stock_service_proto_rawDescGZIP(), []int{4}
}

func (x *ModelPredictions) GetPredictionDates() []string {
	if x != nil {
		return x.PredictionDates
	}
	return nil
}

var File_ml_stock_service_proto protoreflect.FileDescriptor

var file_ml_stock_service_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6d, 0x6c, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x64, 0x0a, 0x0e, 0x4d, 0x4c, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x41,
	0x0a, 0x0f, 0x4d, 0x4c, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2e, 0x0a, 0x0b, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4d, 0x4c, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x97, 0x02, 0x0a, 0x0c, 0x4d, 0x4c, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x2b, 0x0a, 0x0a, 0x64, 0x61,
	0x69, 0x6c, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x4d, 0x4c, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x64, 0x61,
	0x69, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x73, 0x12, 0x50, 0x0a, 0x11, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x70, 0x72, 0x65, 0x64, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4d,
	0x4c, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x10, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x1a, 0x56, 0x0a, 0x15, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x65, 0x64,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x89, 0x01, 0x0a, 0x0b,
	0x4d, 0x4c, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6f,
	0x70, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0x3d, 0x0a, 0x10, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x70,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x65, 0x73, 0x32, 0x45, 0x0a, 0x0e, 0x4d, 0x4c, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d,
	0x4c, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0f, 0x2e, 0x4d, 0x4c, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x4d, 0x4c,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x22, 0x5a,
	0x20, 0x67, 0x6f, 0x2d, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x6c, 0x2d, 0x73, 0x74, 0x6f, 0x70,
	0x2f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ml_stock_service_proto_rawDescOnce sync.Once
	file_ml_stock_service_proto_rawDescData = file_ml_stock_service_proto_rawDesc
)

func file_ml_stock_service_proto_rawDescGZIP() []byte {
	file_ml_stock_service_proto_rawDescOnce.Do(func() {
		file_ml_stock_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_ml_stock_service_proto_rawDescData)
	})
	return file_ml_stock_service_proto_rawDescData
}

var file_ml_stock_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_ml_stock_service_proto_goTypes = []any{
	(*MLStockRequest)(nil),   // 0: MLStockRequest
	(*MLStockResponse)(nil),  // 1: MLStockResponse
	(*MLSymbolData)(nil),     // 2: MLSymbolData
	(*MLDailyData)(nil),      // 3: MLDailyData
	(*ModelPredictions)(nil), // 4: ModelPredictions
	nil,                      // 5: MLSymbolData.ModelPredictionsEntry
}
var file_ml_stock_service_proto_depIdxs = []int32{
	2, // 0: MLStockResponse.symbol_data:type_name -> MLSymbolData
	3, // 1: MLSymbolData.daily_data:type_name -> MLDailyData
	5, // 2: MLSymbolData.model_predictions:type_name -> MLSymbolData.ModelPredictionsEntry
	4, // 3: MLSymbolData.ModelPredictionsEntry.value:type_name -> ModelPredictions
	0, // 4: MLStockService.GetMLStockData:input_type -> MLStockRequest
	1, // 5: MLStockService.GetMLStockData:output_type -> MLStockResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_ml_stock_service_proto_init() }
func file_ml_stock_service_proto_init() {
	if File_ml_stock_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ml_stock_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ml_stock_service_proto_goTypes,
		DependencyIndexes: file_ml_stock_service_proto_depIdxs,
		MessageInfos:      file_ml_stock_service_proto_msgTypes,
	}.Build()
	File_ml_stock_service_proto = out.File
	file_ml_stock_service_proto_rawDesc = nil
	file_ml_stock_service_proto_goTypes = nil
	file_ml_stock_service_proto_depIdxs = nil
}
